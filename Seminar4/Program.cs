// // // // тип_метода ИмяМетода (пар1, пар2...парN)
// // // // a, b - числа; char ('+', '-')
// // // // строчка - массив символов (char-ов)
// // // int calculate(int a, int b, знак символа)
// // // {
// // // if (sign == '+') // "привет", '+' (символ)
// // // {
// //// возвращает a + b; // +
// // // }
// // // else if (знак == '-')
// // // {
// /// / вернуть a - b; // -
// // // }
// // // else if (знак == '*')
// // // {
// /// / возвращает a * b; // *
// // // }
// // // else if (знак == '/')
// // // {
// /// / вернуть a / b; // /
// // // }
// // / / остальное
// // // {
// /// / Консоль.WriteLine("Такого знака наш калькулятор НЕ знает");
// /// / вернуть 0; 
// //// / }
// // // }
// // // // Вызов метода
// // / / // int Calculate(int a, int b, знак символа)
// // / / // PascalCase: getCount 
// / /// Консоль.Строка записи (вычислить)(10, 20, '+'));
// // // Консоль.Строка записи (вычислить)(10, 20, '-'));
// /// / Консоль.Строка записи (вычислить)(300, 20, '/'));
// // // Консоль.Строка записи (вычислить)(300, 20, '*'));
// /// / Консоль.Строка записи (Вычислить(300, 20, '.'));

// // // Задайте массив из N случайных целых чисел (N вводится с
// // // клавиатуры).
// // // Найдите количество чисел, которые оканчиваются на 1 и
// // // делятся нацело на 7.
// // // Пример
// // // [1 5 11 21 81 4 0 91 2 3]
// // // => 2
// // // minRange - минимум для рандома
// // // maxRange - максимум для рандом
// // int[] createArray(размер int, минимальный диапазон int, максимальный диапазон int)
// // {
// // int[] массив = новый int[размер];
// // for (int i = 0; i < массив.Длина; i++)
// // {
// // array[i] = new Random().Next(минимальный диапазон, максимальный диапазон + 1);
// // / / Следующий(0,3): [0,3+1) => 0,1,2,3 
// // }
// // возвращаемый массив;
// // }

// // int GetCountOfInterestingElems(int[] arr)
// // {
// // количество входов = 0;
// // foreach (номер int в arr) // arr=[10,20,30,40]
// // // число = 10, 20, 30, 40 
// // {
// // если (число % 7 == 0 && число % 10 == 1)
// // {
// // количество ++;
// // }
// // }
// // количество возвращаемых данных;
// // }

// // Консоль.Write("Введите размер массива: ");
// // int N = Преобразовать.ToInt32(консоль.ReadLine()); 
// // int min , int max ....
// // int[] res = createArray(N, min, max);
// // // CreateArray(N, 10, 100) создает массив на 10 элементов
// // // Элемент: [10,100]
// // Консоль.WriteLine($"Массив: [ {string.Присоединиться("; ", res)} ]");
// // Консоль.Строка записи($"Итого: {GetCountOfInterestingElems(res)}");


// // Заполните массив на N (вводится с консоли, не более 8)
// // случайных целых чисел от 0 до 9.
// // Сформируйте целое число, которое будет состоять из цифр из
// // массива. Старший разряд числа находится на 0-м индексе,
// // младший – на последнем.
// // Пример
// // [1 3 2 4 2 3] => 132423
// // [2 3 1] => 231

// int[] createArray(размер int)
// {
// int[] array = новый int[размер];
// для (int i = 0; i < массив.Длина; i++)
// {
// array[i] = new Random().Next(0, 10);
// // Следующий(0,10): 0,1,2,3,4,5,6,7,8,9 
// }
// возвращает массив;
// }
// int ConvertArrayToInteger(int[] arr)
// {
// int результат = 0;
// // [2,9,5] = 295
// // 2 * 10^2 => 200
// // 200 + 9 * 10^1 = 290
// // 290 + 5 * 1 = 295
// for (int i = 0, j = arr.Length - 1; i < arr.Length; i++, j--)
// {
// результат += arr[i] * (int)Математический анализ(10, j);
// // double -> int (из вещ. ЧИСЕЛ перевел в целые ЧИСЛА)
// }
// возвращаемый результат;
// }


// Консоль.Write("Введите размер массива: ");
// int N = Преобразовать.ToInt32(консоль.Строка чтения());
// int[] res = CreateArray(N); // Массив
// if (res[0] == 0) // Размер > 8 ИЛИ первая цифра - 0
// {
// return; // Ост-м программу, если размер > 8
// }
// // CreateArray(N, 10, 100) создает массив на 10 элементов
// // Элемент: [10,100]
// Консоль.WriteLine($"Массив: [ {string.Присоединиться("; ", res)} ]");
// Консоль.Строка записи($"Число: {ConvertArrayToInteger(res)}");

while (true) // true == истина
{
 Консоль.Write("Введите текст: ");
 текстовая строка = Консоль.ReadLine(); 
 if (текст == "q")
 {
 разрыв;
 }
 // 11 => 1+1 = 2
 int number; // n = 0, в text присутствуют не только цифры
 // Проверка, что строчка text состоит ТОЛЬКО из цифр
 if (int.TryParse(текст, исходящий номер))// == true
 {
 int sum = 0; // 56=>5+6 = 11
 while (число > 0)
 {
 сумма = sum ... ; // сумма = 6 
 число /= 10;
 } 
 если (сумма % 2 == 0)
 {
 разбить;
 }
 }
}